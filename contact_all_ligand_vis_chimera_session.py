(1, ('RGB', (128, 128), 'x\x9c\xed\xda\xddOZg\x00\x06\xf0^4)r\x94"V\xfc\xc8\x86:\x84\x82\x1e\x05k\x1ds-\xda\x89\x1f\x8d\x83Li6E-\x88\n\x16\x07\x12\xf1\xa3V\x04*\xa9\xebh\x1a\x99\xc5&C\xc5\x8f\xba\xb9\xaa\xecf\xbbY\x96]\xec\xca\x98f\xcb\xeev\xb3d\x7f\xcbh\x9aPwj\x9d\x8d\x94w\xe1}~W\x9c\xe7\xbc\xef\xc9\x13B\xcey\xcf9\x9c9\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xffw2\x19k0\xf41L\x0e\xe9"4\x9a\x9e\x0e\xdf\xbb\xb7n4\x0e\xce\xcfo64\\\']\x87"\x15\x15\xea\xcd\xcd\x9f\xbb\xbb\xed\xc9\xa4\xab\xcb\x16\x0e\x7f\xcb\xe7g\x13lE\x8f\xa6&}{\xfbg\x9cpt4PX\xf8\x0e\x91>\xb4\xc9\xcab\xccf\x17\'L|\xff\x12\x89\x94H\x1f\n\x85B\x11N25\xe5\xab\xae\xae!R\x86B\x91H\x8c\x93\xf4\xf7\xdbo\xdc0\x11)C\xa1p\xf8k\xa7s\\ 8\xffb3\x18\x0c-.\xae\xc8\xe5\n\xb2\xad\xa8\xd2\xd0\xd0\xb4\xbc\xbca\xb5\x0e\x85\xc3\x91\x85\x85G\xa4\xebP\xcal\xee\xb7X\x06H\xb7\xa0\x17\xc306\xdb-\xd2-\xa8\xe6\xf7\xdf%]\x81jKK\x8fIW\xa0WWW\xd7\xfe\xfeAM\rV\xfe\xe9&\x97\xcbc\xb1\xb5\x9d\x9d]\xa1P83\xe3\xdd\xdb\xdb\x1b\x1e\x1e&]\x8a\x16V\xab5\x1a\x8dj4\x9a\xc3a \x100\x18\x0c\xa4*Q\xc5\xe3\x19oii\xe1\x84\x95\x95\x95\xbd\xbd\xbdD\xfa\xd0\xa6\xa8\xa8x`\x80\xbb\xecg\xf8\xfc\xb1\x91\x91\x13\x1e\xa1\xb4\xb4*\xd5\xa5\xe827\x17\xe4$\xf2\xf2\xf2G\xa1\x90(7\xf7$\xd3\xbd\xde\x9d\xb7P\x8a"\xf1\xf8\xf7"\x91(\xb9Y\xa9P\xfc\xf9\xec\xd9\xb8\xcb\xf5E \xf0tk\xcbd2)\x95\xcac\xa6\x8f\x8cp\x9f\xa0\xc2\x1b\xa9\xab\xab[]\x8d\x05g\xbc\x17\xf2\xf2\xe6gg\x9f\xae\xad\xa9\xab^\x9eR\xb4Z\xed\xea\xca\xca\xfbuuG\xce\xe5\xf1\x18\xb7{1]M3Y\xc5\xc5\x8b\xdfD\xa3\x91P\xe8\xc8\xbd^\xef\\KK;\',.~\xcf\xed\xfe*\x18\xdc\xe5\xf3_\xbe\xb8/(\xa8\x18\x1d\xfdM*\xfd\xe8-v\xcdP\xd7u:\xa3^\xff\xba\xbdSS\x81\xf5\xf5\xf8\xd8\xd8\x8cR\xf9\xfc\x1e\xcd\xe9\x9c\x8b\xc7\xff\xaa\xae\xbe*\x95VMO\xaf\x96\x94\xa8\x12\xe1\x95+&\x8fg\xbf\xb0\x90\xbdv\xed\xf6\xa5K\xd6\xf4U\xcf\x08\xe2\xfc|kO\xcf\xf1c\x8a\x8b\xdf\xed\xef\x1f\x8f\xc5~\x19\x1c\xbc\x9d\x0c\xcf\x9dc,\x96\x05\xb7{\xdbn\x8f&\xc3\xf2\xf2\xce\xe6f<\xd0x\x03\x0c\xc3\xb8\x9c\xce\x93\x8c\xb4\xd9\xee\x88DbN\xa8\xd7{X\xb6\xe9p\x92\x9b+\xbb|y&e\xfd2\x9dB\xa1\xb8\xeb\xf7\x9fd\xa4\xd5:\x9d\x97W\xf4j\xde\xda\xfa%\x9f\x7f\xe1p"\x16\xd7\xab\xd5\xbe\xd4\xf4\xcbP}}\x9fge1\x89\x0f\xdb[[=&Sg\x87\xf1?\xa7\xa8\xd5Z\x99L\xfdj\xce\xe3\t\x1d\x8e\xdfU\xaa\xbed"\x14V\xb4\xb5\xfd\x94\x93S\x96\xc2\xc2\x19F"\x91\x06\x02!\x8beP\xa7kMl\xd6\xd6~p\xca\x03\xb2\xec\xa7z}\\,\xd6\x94\x95\x19\xeb\xeb\x17\x04\x02Y*jf2\xa5\xb2\xd2\xe7\xe3\xde\x05\x9f\xc6\xd9\xb3\x8cV\xfb\xb8\xb1q9\x85\xc7\xcc`\x0c\x93\x9d\xf8\xfd\x93nA/\x8f\xc7\xab\xd3\xe1\x9f\xb7\xe9\xd0\xd9i3\x9b\'_\\p\x93\xc6\xc6|,\x8b7_iR[\xdb\x18\x89\xfc \x10\x08\xcf<\xbf\xf8\x96MN\x06\x0f\x0e\xfe\xb6XN\xfa\xc0\x19N/?\xbf\xe8\xfe\xfd\'\xdb\xdb\xfbv\xfb\x1d\x8d\xe6j"in\xfexq\xf1\xbb\xec\xec\xf3\xa4\xab\xd1\xc2\xe1\xf0\xabT\xffZj\x96\x96*\x82\xc1\',\xaby\xdd\x14H!\x87\xc3WR\xc2]\x99\xb7\xb5u\xb7\xb7\xf7\x1d9\x1eR\xcbh<\xe2\x84?44\xabR}\x98\xfe2\x14\xda\xd8\xf8\x83\xc7c8\xe1\xcd\x9b~\x89\xe4\xb8\xb7]\x90*\x1d\x1d\xb7\x1e<\xf81\'G\x98L\n\nJ\\\xae%\x82\x95h#\x12\x15NLl\xb2\xac\xb6\xbe\xfe\x93\x87\x0f\x7f\xf5\xf9v\r\x06\x07\xe9R\xd4\x99\x98\xd80\x99\xbc\xa4[\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\xac\x7f\x00)\x12\xed\xe4'),
u'the ligands are overlayed with the correct files loaded and the correct .dat files loaded for contacts to be visualized on the 3d ligand centroid of all systems\n\n')
import cPickle, base64
try:
	from SimpleSession.versions.v65 import beginRestore,\
	    registerAfterModelsCB, reportRestoreError, checkVersion
except ImportError:
	from chimera import UserError
	raise UserError('Cannot open session that was saved in a'
	    ' newer version of Chimera; update your version')
checkVersion([1, 17, 3, 42480])
import chimera
from chimera import replyobj
replyobj.status('Restoring session...', \
    blankAfter=0)
replyobj.status('Beginning session restore...', \
    blankAfter=0, secondary=True)
beginRestore()

def restoreCoreModels():
	from SimpleSession.versions.v65 import init, restoreViewer, \
	     restoreMolecules, restoreColors, restoreSurfaces, \
	     restoreVRML, restorePseudoBondGroups, restoreModelAssociations
	molInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVRFyaWJib25JbnNpZGVDb2xvcnECSwROfYdVCWJhbGxTY2FsZXEDSwRHP9AAAAAAAAB9h1UJcG9pbnRTaXplcQRLBEc/8AAAAAAAAH2HVQVjb2xvcnEFSwRLAH1xBihLAV1xB0sBYUsCXXEISwJhSwNdcQlLA2F1h1UKcmliYm9uVHlwZXEKSwRLAH2HVQpzdGlja1NjYWxlcQtLBEc/8AAAAAAAAH2HVQxtbUNJRkhlYWRlcnNxDF1xDShOTk5OZVUMYXJvbWF0aWNNb2RlcQ5LBEsBfYdVCnZkd0RlbnNpdHlxD0sER0AUAAAAAAAAfYdVBmhpZGRlbnEQSwSJfYdVDWFyb21hdGljQ29sb3JxEUsETn2HVQ9yaWJib25TbW9vdGhpbmdxEksESwB9h1UJYXV0b2NoYWlucRNLBIh9h1UKcGRiVmVyc2lvbnEUSwRLAH2HVQhvcHRpb25hbHEVfXEWVQhvcGVuZWRBc3EXiIlLBChYbwAAAC9Vc2Vycy9mMDA2ajYwL2dpdC9oSUFQUF9tb25vbWVyX3NpbXVsYXRpb25zL291dGRpcl9zMjBnX2hpYXBwX3l4aTEvY3RfaWFwcF9zMjBnX3l4aTFfNUFjdXRvZmZfY2VudHJvaWRfQzBfLmdyb3EYVQhHcm9tb3M4N3EZTol0cRp9cRsoKFhrAAAAL1VzZXJzL2YwMDZqNjAvZ2l0L2hJQVBQX21vbm9tZXJfc2ltdWxhdGlvbnMvb3V0ZGlyX3d0X2hpYXBwX3l4aTEvY3RfaWFwcF93dF95eGkxXzVBY3V0b2ZmX2NlbnRyb2lkX0MwXy5ncm9xHGgZTol0cR1dcR5LAGEoWGsAAAAvVXNlcnMvZjAwNmo2MC9naXQvaElBUFBfbW9ub21lcl9zaW11bGF0aW9ucy9vdXRkaXJfd3RfaGlhcHBfeXhhMS9jdF9pYXBwX3d0X3l4YTFfNUFjdXRvZmZfY2VudHJvaWRfQzBfLmdyb3EfaBlOiXRxIF1xIUsDYShYbwAAAC9Vc2Vycy9mMDA2ajYwL2dpdC9oSUFQUF9tb25vbWVyX3NpbXVsYXRpb25zL291dGRpcl9zMjBnX2hpYXBwX3l4YTEvY3RfaWFwcF9zMjBnX3l4YTFfNUFjdXRvZmZfY2VudHJvaWRfQzBfLmdyb3EiaBlOiXRxI11xJEsCYXWHh3NVD2xvd2VyQ2FzZUNoYWluc3ElSwSJfYdVCWxpbmVXaWR0aHEmSwRHP/AAAAAAAAB9h1UPcmVzaWR1ZUxhYmVsUG9zcSdLBEsAfYdVBG5hbWVxKEsEWBUAAABHZW5lcmF0ZWQgd2l0aCBNRFRyYWp9h1UPYXJvbWF0aWNEaXNwbGF5cSlLBIl9h1UPcmliYm9uU3RpZmZuZXNzcSpLBEc/6ZmZmZmZmn2HVQpwZGJIZWFkZXJzcStdcSwofXEtfXEufXEvfXEwZVUDaWRzcTFLBEsDSwCGfXEyKEsCSwCGXXEzSwJhSwFLAIZdcTRLAWFLAEsAhl1xNUsAYXWHVQ5zdXJmYWNlT3BhY2l0eXE2SwRHv/AAAAAAAAB9h1UQYXJvbWF0aWNMaW5lVHlwZXE3SwRLAn2HVRRyaWJib25IaWRlc01haW5jaGFpbnE4SwSIfYdVB2Rpc3BsYXlxOUsEiX1xOohdcTtLA2Fzh3Uu'))
	resInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVQZpbnNlcnRxAksEVQEgfYdVC2ZpbGxEaXNwbGF5cQNLBIl9h1UEbmFtZXEESwRYAwAAAExJR32HVQVjaGFpbnEFSwRYAQAAACB9h1UOcmliYm9uRHJhd01vZGVxBksESwJ9h1UCc3NxB0sEiYmGfYdVCG1vbGVjdWxlcQhLBEsAfXEJKEsBTl1xCksBSwGGcQthhksCTl1xDEsCSwGGcQ1hhksDTl1xDksDSwGGcQ9hhnWHVQtyaWJib25Db2xvcnEQSwROfYdVBWxhYmVscRFLBFgAAAAAfYdVCmxhYmVsQ29sb3JxEksETn2HVQhmaWxsTW9kZXETSwRLAX2HVQVpc0hldHEUSwSJfYdVC2xhYmVsT2Zmc2V0cRVLBE59h1UIcG9zaXRpb25xFl1xFyhLJ0sBhnEYSydLAYZxGUsnSwGGcRpLJ0sBhnEbZVUNcmliYm9uRGlzcGxheXEcSwSJfYdVCG9wdGlvbmFscR19VQRzc0lkcR5LBEr/////fYd1Lg=='))
	atomInfo = cPickle.loads(base64.b64decode(''))
	bondInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVQVjb2xvcnECS/5OfYdVBWF0b21zcQNdcQQoXXEFKEsISwllXXEGKEsISw1lXXEHKEsISyhlXXEIKEsJSwplXXEJKEsJSxBlXXEKKEsKSwtlXXELKEsKSw5lXXEMKEsLSwxlXXENKEsLSyllXXEOKEsMSw1lXXEPKEsMSyplXXEQKEsNSytlXXERKEsOSw9lXXESKEsOSxFlXXETKEsPSxBlXXEUKEsRSxJlXXEVKEsRSyxlXXEWKEsRSy1lXXEXKEsSSxNlXXEYKEsSSxRlXXEZKEsUSxVlXXEaKEsUSy5lXXEbKEsVSxZlXXEcKEsVSxplXXEdKEsWSxdlXXEeKEsWSy9lXXEfKEsXSxhlXXEgKEsXSzBlXXEhKEsYSxllXXEiKEsYSxtlXXEjKEsZSxplXXEkKEsZSzFlXXElKEsaSzJlXXEmKEsbSxxlXXEnKEsbSyBlXXEoKEsbSzNlXXEpKEscSx1lXXEqKEscSzRlXXErKEscSzVlXXEsKEsdSx5lXXEtKEsdSyRlXXEuKEsdSzZlXXEvKEseSx9lXXEwKEseSzdlXXExKEseSzhlXXEyKEsfSyBlXXEzKEsfSyFlXXE0KEsfSzllXXE1KEshSyJlXXE2KEshSyNlXXE3KEshSzplXXE4KEsiSztlXXE5KEsiSzxlXXE6KEsiSz1lXXE7KEsjSz5lXXE8KEsjSz9lXXE9KEsjS0BlXXE+KEskSyVlXXE/KEskS0FlXXFAKEslSyZlXXFBKEslSydlXXFCKEsnS0JlXXFDKEsnS0NlXXFEKEsnS0RlXXFFKEtFS0ZlXXFGKEtFS0plXXFHKEtFS2VlXXFIKEtGS0dlXXFJKEtGS01lXXFKKEtHS0hlXXFLKEtHS0tlXXFMKEtIS0llXXFNKEtIS2ZlXXFOKEtJS0plXXFPKEtJS2dlXXFQKEtKS2hlXXFRKEtLS0xlXXFSKEtLS05lXXFTKEtMS01lXXFUKEtOS09lXXFVKEtOS2llXXFWKEtOS2plXXFXKEtPS1BlXXFYKEtPS1FlXXFZKEtRS1JlXXFaKEtRS2tlXXFbKEtSS1NlXXFcKEtSS1dlXXFdKEtTS1RlXXFeKEtTS2xlXXFfKEtUS1VlXXFgKEtUS21lXXFhKEtVS1ZlXXFiKEtVS1hlXXFjKEtWS1dlXXFkKEtWS25lXXFlKEtXS29lXXFmKEtYS1llXXFnKEtYS11lXXFoKEtYS3BlXXFpKEtZS1plXXFqKEtZS3FlXXFrKEtZS3JlXXFsKEtaS1tlXXFtKEtaS2FlXXFuKEtaS3NlXXFvKEtbS1xlXXFwKEtbS3RlXXFxKEtbS3VlXXFyKEtcS11lXXFzKEtcS15lXXF0KEtcS3ZlXXF1KEteS19lXXF2KEteS2BlXXF3KEteS3dlXXF4KEtfS3hlXXF5KEtfS3llXXF6KEtfS3plXXF7KEtgS3tlXXF8KEtgS3xlXXF9KEtgS31lXXF+KEthS2JlXXF/KEthS35lXXGAKEtiS2NlXXGBKEtiS2RlXXGCKEtkS39lXXGDKEtkS4BlXXGEKEtkS4FlXXGFKEuCS4NlXXGGKEuCS4dlXXGHKEuCS6NlXXGIKEuCS6RlXXGJKEuDS4RlXXGKKEuDS6VlXXGLKEuDS6ZlXXGMKEuES4VlXXGNKEuES4hlXXGOKEuES6dlXXGPKEuFS4ZlXXGQKEuFS6hlXXGRKEuFS6llXXGSKEuGS4dlXXGTKEuGS6plXXGUKEuGS6tlXXGVKEuHS6xlXXGWKEuHS61lXXGXKEuIS4llXXGYKEuIS4plXXGZKEuKS4tlXXGaKEuKS65lXXGbKEuLS4xlXXGcKEuLS69lXXGdKEuLS7BlXXGeKEuMS41lXXGfKEuMS7FlXXGgKEuMS7JlXXGhKEuNS45lXXGiKEuNS5JlXXGjKEuOS49lXXGkKEuPS5BlXXGlKEuPS51lXXGmKEuQS5FlXXGnKEuRS5JlXXGoKEuRS7NlXXGpKEuSS5NlXXGqKEuTS5RlXXGrKEuTS5VlXXGsKEuVS5ZlXXGtKEuVS7RlXXGuKEuWS5dlXXGvKEuWS5tlXXGwKEuXS5hlXXGxKEuXS5xlXXGyKEuYS5llXXGzKEuYS7VlXXG0KEuZS5plXXG1KEuZS7ZlXXG2KEuaS5tlXXG3KEuaS7dlXXG4KEubS7hlXXG5KEudS55lXXG6KEudS6JlXXG7KEueS59lXXG8KEueS7llXXG9KEufS6BlXXG+KEufS7plXXG/KEugS6FlXXHAKEugS7tlXXHBKEuhS6JlXXHCKEuhS7xlXXHDKEuiS71lXXHEKEu+S79lXXHFKEu+S8NlXXHGKEu+S99lXXHHKEu+S+BlXXHIKEu/S8BlXXHJKEu/S+FlXXHKKEu/S+JlXXHLKEvAS8FlXXHMKEvAS8RlXXHNKEvAS+NlXXHOKEvBS8JlXXHPKEvBS+RlXXHQKEvBS+VlXXHRKEvCS8NlXXHSKEvCS+ZlXXHTKEvCS+dlXXHUKEvDS+hlXXHVKEvDS+llXXHWKEvES8VlXXHXKEvES8ZlXXHYKEvGS8dlXXHZKEvGS+plXXHaKEvHS8hlXXHbKEvHS+tlXXHcKEvHS+xlXXHdKEvIS8llXXHeKEvIS+1lXXHfKEvIS+5lXXHgKEvJS8plXXHhKEvJS85lXXHiKEvKS8tlXXHjKEvLS8xlXXHkKEvLS9llXXHlKEvMS81lXXHmKEvNS85lXXHnKEvNS+9lXXHoKEvOS89lXXHpKEvPS9BlXXHqKEvPS9FlXXHrKEvRS9JlXXHsKEvRS/BlXXHtKEvSS9NlXXHuKEvSS9dlXXHvKEvTS9RlXXHwKEvTS9hlXXHxKEvUS9VlXXHyKEvUS/FlXXHzKEvVS9ZlXXH0KEvVS/JlXXH1KEvWS9dlXXH2KEvWS/NlXXH3KEvXS/RlXXH4KEvZS9plXXH5KEvZS95lXXH6KEvaS9tlXXH7KEvaS/VlXXH8KEvbS9xlXXH9KEvbS/ZlXXH+KEvcS91lXXH/KEvcS/dlXXIAAQAAKEvdS95lXXIBAQAAKEvdS/hlXXICAQAAKEveS/llZVUFbGFiZWxyAwEAAEv+WAAAAAB9h1UIaGFsZmJvbmRyBAEAAEv+iH2HVQZyYWRpdXNyBQEAAEv+Rz/JmZmgAAAAfYdVC2xhYmVsT2Zmc2V0cgYBAABL/k59h1UIZHJhd01vZGVyBwEAAEv+SwF9h1UIb3B0aW9uYWxyCAEAAH1VB2Rpc3BsYXlyCQEAAEv+SwJ9h3Uu'))
	crdInfo = cPickle.loads(base64.b64decode(''))
	surfInfo = {'category': (0, None, {}), 'probeRadius': (0, None, {}), 'pointSize': (0, None, {}), 'name': [], 'density': (0, None, {}), 'colorMode': (0, None, {}), 'useLighting': (0, None, {}), 'transparencyBlendMode': (0, None, {}), 'molecule': [], 'smoothLines': (0, None, {}), 'lineWidth': (0, None, {}), 'allComponents': (0, None, {}), 'twoSidedLighting': (0, None, {}), 'customVisibility': [], 'drawMode': (0, None, {}), 'display': (0, None, {}), 'customColors': []}
	vrmlInfo = {'subid': (0, None, {}), 'display': (0, None, {}), 'id': (0, None, {}), 'vrmlString': [], 'name': (0, None, {})}
	colors = {u'Ru': ((0.141176, 0.560784, 0.560784), 1, u'default'), u'Re': ((0.14902, 0.490196, 0.670588), 1, u'default'), u'Rf': ((0.8, 0, 0.34902), 1, u'default'), u'Ra': ((0, 0.490196, 0), 1, u'default'), u'Rb': ((0.439216, 0.180392, 0.690196), 1, u'default'), u'Rn': ((0.258824, 0.509804, 0.588235), 1, u'default'), u'Rh': ((0.0392157, 0.490196, 0.54902), 1, u'default'), u'Be': ((0.760784, 1, 0), 1, u'default'), u'Ba': ((0, 0.788235, 0), 1, u'default'), u'Bh': ((0.878431, 0, 0.219608), 1, u'default'), u'Bi': ((0.619608, 0.309804, 0.709804), 1, u'default'), u'Bk': ((0.541176, 0.309804, 0.890196), 1, u'default'), u'Br': ((0.65098, 0.160784, 0.160784), 1, u'default'), u'H': ((1, 1, 1), 1, u'default'), u'P': ((1, 0.501961, 0), 1, u'default'), u'Os': ((0.14902, 0.4, 0.588235), 1, u'default'), u'Es': ((0.701961, 0.121569, 0.831373), 1, u'default'), u'Hg': ((0.721569, 0.721569, 0.815686), 1, u'default'), u'Ge': ((0.4, 0.560784, 0.560784), 1, u'default'), u'Gd': ((0.270588, 1, 0.780392), 1, u'default'), u'Ga': ((0.760784, 0.560784, 0.560784), 1, u'default'), u'Pr': ((0.85098, 1, 0.780392), 1, u'default'),
u'slate gray': ((0.439216, 0.501961, 0.564706), 1, u'default'), u'Pt': ((0.815686, 0.815686, 0.878431), 1, u'default'), u'Pu': ((0, 0.419608, 1), 1, u'default'), u'C': ((0.564706, 0.564706, 0.564706), 1, u'default'), u'Pb': ((0.341176, 0.34902, 0.380392), 1, u'default'), u'Pa': ((0, 0.631373, 1), 1, u'default'), u'Pd': ((0, 0.411765, 0.521569), 1, u'default'), u'Cd': ((1, 0.85098, 0.560784), 1, u'default'), u'Po': ((0.670588, 0.360784, 0), 1, u'default'), u'Pm': ((0.639216, 1, 0.780392), 1, u'default'), u'Hs': ((0.901961, 0, 0.180392), 1, u'default'), u'Ho': ((0, 1, 0.611765), 1, u'default'), u'Hf': ((0.301961, 0.760784, 1), 1, u'default'), u'Mo': ((0.329412, 0.709804, 0.709804), 1, u'default'), u'He': ((0.85098, 1, 1), 1, u'default'), u'Md': ((0.701961, 0.0509804, 0.65098), 1, u'default'), u'Mg': ((0.541176, 1, 0), 1, u'default'), u'K': ((0.560784, 0.25098, 0.831373), 1, u'default'), u'Mn': ((0.611765, 0.478431, 0.780392), 1, u'default'), u'O': ((1, 0.0509804, 0.0509804), 1, u'default'), u'Mt': ((0.921569, 0, 0.14902), 1, u'default'), u'S': ((1, 1, 0.188235), 1, u'default'),
u'W': ((0.129412, 0.580392, 0.839216), 1, u'default'), u'sky blue': ((0.529412, 0.807843, 0.921569), 1, u'default'), u'Zn': ((0.490196, 0.501961, 0.690196), 1, u'default'), u'plum': ((0.866667, 0.627451, 0.866667), 1, u'default'), u'Eu': ((0.380392, 1, 0.780392), 1, u'default'), u'Zr': ((0.580392, 0.878431, 0.878431), 1, u'default'), u'Er': ((0, 0.901961, 0.458824), 1, u'default'), u'Ni': ((0.313725, 0.815686, 0.313725), 1, u'default'), u'No': ((0.741176, 0.0509804, 0.529412), 1, u'default'), u'Na': ((0.670588, 0.360784, 0.94902), 1, u'default'), u'Nb': ((0.45098, 0.760784, 0.788235), 1, u'default'), u'Nd': ((0.780392, 1, 0.780392), 1, u'default'), u'Ne': ((0.701961, 0.890196, 0.960784), 1, u'default'), u'Np': ((0, 0.501961, 1), 1, u'default'), u'Fr': ((0.258824, 0, 0.4), 1, u'default'), u'Fe': ((0.878431, 0.4, 0.2), 1, u'default'), u'Fm': ((0.701961, 0.121569, 0.729412), 1, u'default'), u'B': ((1, 0.709804, 0.709804), 1, u'default'), u'F': ((0.564706, 0.878431, 0.313725), 1, u'default'), u'Sr': ((0, 1, 0), 1, u'default'), u'N': ((0.188235, 0.313725, 0.972549), 1, u'default'),
u'Kr': ((0.360784, 0.721569, 0.819608), 1, u'default'), u'Si': ((0.941176, 0.784314, 0.627451), 1, u'default'), u'Sn': ((0.4, 0.501961, 0.501961), 1, u'default'), u'Sm': ((0.560784, 1, 0.780392), 1, u'default'), u'V': ((0.65098, 0.65098, 0.670588), 1, u'default'), u'Sc': ((0.901961, 0.901961, 0.901961), 1, u'default'), u'Sb': ((0.619608, 0.388235, 0.709804), 1, u'default'), u'Sg': ((0.85098, 0, 0.270588), 1, u'default'), u'Se': ((1, 0.631373, 0), 1, u'default'), u'Co': ((0.941176, 0.564706, 0.627451), 1, u'default'), u'Cm': ((0.470588, 0.360784, 0.890196), 1, u'default'), u'Cl': ((0.121569, 0.941176, 0.121569), 1, u'default'), u'Ca': ((0.239216, 1, 0), 1, u'default'), u'Cf': ((0.631373, 0.211765, 0.831373), 1, u'default'), u'Ce': ((1, 1, 0.780392), 1, u'default'), u'Xe': ((0.258824, 0.619608, 0.690196), 1, u'default'), u'Lu': ((0, 0.670588, 0.141176), 1, u'default'), u'light green': ((0.564706, 0.933333, 0.564706), 1, u'default'), u'Cs': ((0.341176, 0.0901961, 0.560784), 1, u'default'), u'Cr': ((0.541176, 0.6, 0.780392), 1, u'default'), u'Cu': ((0.784314, 0.501961, 0.2), 1, u'default'),
u'La': ((0.439216, 0.831373, 1), 1, u'default'), u'Li': ((0.8, 0.501961, 1), 1, u'default'), u'Tl': ((0.65098, 0.329412, 0.301961), 1, u'default'), u'Tm': ((0, 0.831373, 0.321569), 1, u'default'), u'Lr': ((0.780392, 0, 0.4), 1, u'default'), u'Th': ((0, 0.729412, 1), 1, u'default'), u'Ti': ((0.74902, 0.760784, 0.780392), 1, u'default'), u'tan': ((0.823529, 0.705882, 0.54902), 1, u'default'), u'Te': ((0.831373, 0.478431, 0), 1, u'default'), u'Tb': ((0.188235, 1, 0.780392), 1, u'default'), u'Tc': ((0.231373, 0.619608, 0.619608), 1, u'default'), u'Ta': ((0.301961, 0.65098, 1), 1, u'default'), u'pink': ((1, 0.752941, 0.796078), 1, u'default'), u'Yb': ((0, 0.74902, 0.219608), 1, u'default'), u'Db': ((0.819608, 0, 0.309804), 1, u'default'), u'Dy': ((0.121569, 1, 0.780392), 1, u'default'), u'I': ((0.580392, 0, 0.580392), 1, u'default'), u'U': ((0, 0.560784, 1), 1, u'default'), u'Y': ((0.580392, 1, 1), 1, u'default'), u'Ac': ((0.439216, 0.670588, 0.980392), 1, u'default'), u'Ag': ((0.752941, 0.752941, 0.752941), 1, u'default'), u'Ir': ((0.0901961, 0.329412, 0.529412), 1, u'default'),
u'Am': ((0.329412, 0.360784, 0.94902), 1, u'default'), u'Al': ((0.74902, 0.65098, 0.65098), 1, u'default'), u'As': ((0.741176, 0.501961, 0.890196), 1, u'default'), u'Ar': ((0.501961, 0.819608, 0.890196), 1, u'default'), u'Au': ((1, 0.819608, 0.137255), 1, u'default'), u'At': ((0.458824, 0.309804, 0.270588), 1, u'default'), u'In': ((0.65098, 0.458824, 0.45098), 1, u'default')}
	materials = {u'default': ((0, 0, 0), 70)}
	pbInfo = {'category': [u'distance monitor'], 'bondInfo': [{'color': (0, None, {}), 'atoms': [], 'label': (0, None, {}), 'halfbond': (0, None, {}), 'labelColor': (0, None, {}), 'labelOffset': (0, None, {}), 'drawMode': (0, None, {}), 'display': (0, None, {})}], 'lineType': (1, 2, {}), 'color': (1, 206, {}), 'optional': {'fixedLabels': (True, False, (1, False, {}))}, 'display': (1, True, {}), 'showStubBonds': (1, False, {}), 'lineWidth': (1, 1, {}), 'stickScale': (1, 1, {}), 'id': [-2]}
	modelAssociations = {}
	colorInfo = (208, (u'', (0.908, 0.908, 1, 1)), {(u'', (0.896, 0.896, 1, 1)): [201], (u'', (1, 0.604, 0.604, 1)): [119], (u'', (0.92, 0.92, 1, 1)): [47], (u'', (1, 0.404, 0.404, 1)): [52], (u'', (1, 0.428, 0.428, 1)): [62], (u'', (1, 0.48, 0.48, 1)): [65], (u'', (1, 0.64, 0.64, 1)): [129], (u'', (1, 0.84, 0.84, 1)): [121], (u'', (1, 0.976, 0.976, 1)): [148], (u'', (0.992, 0.992, 1, 1)): [171], (u'', (0.66, 0.66, 1, 1)): [203], (u'', (0.668, 0.668, 1, 1)): [98, 160], (u'', (0.54, 0.54, 1, 1)): [159], (u'', (0.664, 0.664, 1, 1)): [99, 136], (u'', (1, 0.896, 0.896, 1)): [145], (u'', (1, 0.616, 0.616, 1)): [40], (u'', (0.748, 0.748, 1, 1)): [75, 106], (u'', (1, 0.656, 0.656, 1)): [23], (u'', (1, 0.476, 0.476, 1)): [87], (u'', (0.756, 0.756, 1, 1)): [104], (u'', (1, 0.956, 0.956, 1)): [152], (u'', (0.728, 0.728, 1, 1)): [202], (u'', (0.292, 0.292, 1, 1)): [196], (u'', (0.712, 0.712, 1, 1)): [96], (u'', (1, 0.456, 0.456, 1)): [57], (u'', (1, 0.46, 0.46, 1)): [66], (u'', (1, 0.6, 0.6, 1)): [82], (u'', (1, 0.284, 0.284, 1)): [17], (u'', (1, 0.532, 0.532, 1)): [83], (u'', (1, 0.792, 0.792, 1)): [42], (u'', (0.74, 0.74, 1, 1)): [94],
(u'', (1, 0.24, 0.24, 1)): [11], (u'', (1, 0.192, 0.192, 1)): [10], (u'', (0.888, 0.888, 1, 1)): [77], (u'', (0.804, 0.804, 1, 1)): [179], (u'green', (0, 1, 0, 1)): [207], (u'', (1, 0.812, 0.812, 1)): [123], (u'', (1, 0.276, 0.276, 1)): [15], (u'', (1, 0.496, 0.496, 1)): [22], (u'', (1, 0.308, 0.308, 1)): [33], (u'', (1, 0.512, 0.512, 1)): [39], (u'', (0.94, 0.94, 1, 1)): [182], (u'', (1, 0.996, 0.996, 1)): [168], (u'', (1, 0.332, 0.332, 1)): [7], (u'', (0.836, 0.836, 1, 1)): [100, 166], (u'', (1, 0.924, 0.924, 1)): [111], (u'', (0.8, 0.8, 1, 1)): [180], (u'', (1, 0.288, 0.288, 1)): [4], (u'', (0.788, 0.788, 1, 1)): [43, 204], (u'', (1, 0.252, 0.252, 1)): [12], (u'', (1, 0.316, 0.316, 1)): [61], (u'tan', (0.823529, 0.705882, 0.54902, 1)): [0], (u'', (1, 0.636, 0.636, 1)): [116], (u'', (0.72, 0.72, 1, 1)): [79], (u'', (1, 0.716, 0.716, 1)): [147], (u'', (0.912, 0.912, 1, 1)): [200], (u'', (1, 0.324, 0.324, 1)): [18], (u'', (0.436, 0.436, 1, 1)): [191], (u'', (0.448, 0.448, 1, 1)): [192], (u'', (0.784, 0.784, 1, 1)): [51, 197], (u'', (1, 0.82, 0.82, 1)): [90], (u'', (1, 0.86, 0.86, 1)): [27],
(u'', (0.936, 0.936, 1, 1)): [110, 185], (u'', (1, 0.832, 0.832, 1)): [30], (u'', (0.976, 0.976, 1, 1)): [181], (u'', (1, 0.968, 0.968, 1)): [126], (u'', (0.84, 0.84, 1, 1)): [32, 198], (u'', (1, 0.94, 0.94, 1)): [125], (u'', (1, 0.648, 0.648, 1)): [117], (u'', (0.692, 0.692, 1, 1)): [140], (u'', (0.416, 0.416, 1, 1)): [187], (u'', (1, 0.732, 0.732, 1)): [69], (u'', (1, 0.372, 0.372, 1)): [63], (u'', (0.916, 0.916, 1, 1)): [48], (u'', (0.504, 0.504, 1, 1)): [92], (u'', (1, 0.984, 0.984, 1)): [173], (u'', (0.636, 0.636, 1, 1)): [80, 107], (u'', (1, 0.34, 0.34, 1)): [9], (u'', (0.968, 0.968, 1, 1)): [151], (u'', (0.452, 0.452, 1, 1)): [158], (u'', (0.376, 0.376, 1, 1)): [194], (u'', (1, 1, 1, 1)): [28, 109], (u'', (0.78, 0.78, 1, 1)): [50, 93], (u'', (0.672, 0.672, 1, 1)): [97], (u'', (1, 0.244, 0.244, 1)): [5], (u'', (0.332, 0.332, 1, 1)): [193], (u'yellow', (1, 1, 0, 1)): [206], (u'', (1, 0.572, 0.572, 1)): [86], (u'', (0.42, 0.42, 1, 1)): [143], (u'', (1, 0.876, 0.876, 1)): [155], (u'', (1, 0.988, 0.988, 1)): [149], (u'', (1, 0.448, 0.448, 1)): [55], (u'', (1, 0.736, 0.736, 1)): [88, 131],
(u'', (1, 0.376, 0.376, 1)): [8], (u'', (1, 0.28, 0.28, 1)): [36], (u'', (1, 0.72, 0.72, 1)): [157], (u'', (1, 0.684, 0.684, 1)): [113], (u'', (0.676, 0.676, 1, 1)): [139], (u'', (0.928, 0.928, 1, 1)): [72, 167], (u'', (0.948, 0.948, 1, 1)): [91], (u'', (0.772, 0.772, 1, 1)): [78, 177], (u'', (0.924, 0.924, 1, 1)): [105], (u'', (1, 0.536, 0.536, 1)): [26], (u'', (1, 0.188, 0.188, 1)): [14], (u'', (1, 0.304, 0.304, 1)): [19], (u'', (1, 0.472, 0.472, 1)): [67], (u'', (0.576, 0.576, 1, 1)): [108], (u'', (1, 0.42, 0.42, 1)): [81], (u'', (0.832, 0.832, 1, 1)): [184], (u'', (1, 0.7, 0.7, 1)): [120], (u'', (0.24, 0.24, 1, 1)): [195], (u'', (1, 0.644, 0.644, 1)): [115], (u'', (0.736, 0.736, 1, 1)): [178], (u'', (1, 0.592, 0.592, 1)): [68], (u'', (0.904, 0.904, 1, 1)): [176], (u'', (1, 0.5, 0.5, 1)): [56], (u'', (1, 0.844, 0.844, 1)): [89], (u'', (1, 0.808, 0.808, 1)): [25], (u'', (1, 0.368, 0.368, 1)): [60], (u'', (1, 0.396, 0.396, 1)): [84], (u'', (1, 0.196, 0.196, 1)): [13], (u'', (1, 0.796, 0.796, 1)): [112], (u'', (1, 0.312, 0.312, 1)): [58], (u'', (0.9, 0.9, 1, 1)): [31], (u'', (1, 0.804, 0.804, 1)): [154],
(u'', (0.548, 0.548, 1, 1)): [141], (u'', (1, 0.892, 0.892, 1)): [124], (u'', (0.512, 0.512, 1, 1)): [161], (u'', (0.68, 0.68, 1, 1)): [137], (u'', (0.64, 0.64, 1, 1)): [103], (u'', (1, 0.32, 0.32, 1)): [20], (u'', (0.484, 0.484, 1, 1)): [189], (u'', (1, 0.212, 0.212, 1)): [16], (u'', (1, 0.384, 0.384, 1)): [21], (u'', (1, 0.932, 0.932, 1)): [172], (u'', (0.604, 0.604, 1, 1)): [101, 190], (u'', (1, 0.964, 0.964, 1)): [127], (u'', (1, 0.66, 0.66, 1)): [118], (u'', (0.792, 0.792, 1, 1)): [71], (u'', (1, 0.412, 0.412, 1)): [35], (u'', (1, 0.776, 0.776, 1)): [73, 146], (u'', (1, 0.588, 0.588, 1)): [41], (u'', (0.372, 0.372, 1, 1)): [186], (u'', (1, 0.4, 0.4, 1)): [38], (u'sky blue', (0.529412, 0.807843, 0.921569, 1)): [1], (u'', (0.96, 0.96, 1, 1)): [150, 175], (u'', (0.608, 0.608, 1, 1)): [102], (u'', (0.588, 0.588, 1, 1)): [135], (u'', (0.388, 0.388, 1, 1)): [163], (u'', (1, 0.236, 0.236, 1)): [37], (u'', (0.768, 0.768, 1, 1)): [164], (u'', (1, 0.824, 0.824, 1)): [156], (u'', (1, 0.944, 0.944, 1)): [70, 169], (u'', (0.704, 0.704, 1, 1)): [95], (u'', (0.876, 0.876, 1, 1)): [74],
(u'plum', (0.866667, 0.627451, 0.866667, 1)): [2], (u'', (0.412, 0.412, 1, 1)): [162], (u'', (1, 0.764, 0.764, 1)): [132], (u'', (1, 0.44, 0.44, 1)): [64], (u'', (0.56, 0.56, 1, 1)): [134], (u'', (1, 0.392, 0.392, 1)): [85], (u'', (1, 0.784, 0.784, 1)): [122], (u'', (1, 0.676, 0.676, 1)): [130], (u'', (1, 0.704, 0.704, 1)): [153], (u'', (1, 0.228, 0.228, 1)): [6], (u'', (0.716, 0.716, 1, 1)): [76, 205], (u'', (1, 0.344, 0.344, 1)): [54], (u'light green', (0.564706, 0.933333, 0.564706, 1)): [3], (u'', (1, 0.364, 0.364, 1)): [53], (u'', (1, 0.916, 0.916, 1)): [49], (u'', (1, 0.356, 0.356, 1)): [59], (u'', (1, 0.612, 0.612, 1)): [114], (u'', (0.6, 0.6, 1, 1)): [142], (u'', (1, 0.912, 0.912, 1)): [24, 128], (u'', (1, 0.468, 0.468, 1)): [34], (u'', (0.956, 0.956, 1, 1)): [46], (u'', (0.864, 0.864, 1, 1)): [183], (u'', (0.724, 0.724, 1, 1)): [165], (u'', (0.848, 0.848, 1, 1)): [138, 199], (u'', (1, 0.748, 0.748, 1)): [133], (u'', (0.996, 0.996, 1, 1)): [45, 170], (u'', (0.98, 0.98, 1, 1)): [29], (u'', (0.468, 0.468, 1, 1)): [144, 188]})
	viewerInfo = {'cameraAttrs': {'center': (4.405, -0.23499997615814, -9.7798572757858), 'fieldOfView': 45.7065038806, 'nearFar': (0.57321124781542, -20.132925799387), 'ortho': False, 'eyeSeparation': 50.8, 'focal': -2.1749999761581}, 'viewerAttrs': {'silhouetteColor': None, 'clipping': False, 'showSilhouette': False, 'showShadows': False, 'viewSize': 11.221252846343, 'labelsOnTop': True, 'depthCueRange': (0.5, 1), 'silhouetteWidth': 2, 'singleLayerTransparency': True, 'shadowTextureSize': 2048, 'backgroundImage': [None, 1, 2, 1, 0, 0], 'backgroundGradient': [('Chimera default', [(1, 1, 1, 1), (0, 0, 1, 1)], 1), 1, 0, 0], 'depthCue': False, 'highlight': 0, 'scaleFactor': 0.50550394276447, 'angleDependentTransparency': True, 'backgroundMethod': 0}, 'viewerHL': 207, 'cameraMode': 'mono', 'detail': 1.5, 'viewerFog': None, 'viewerBG': None}

	replyobj.status("Initializing session restore...", blankAfter=0,
		secondary=True)
	from SimpleSession.versions.v65 import expandSummary
	init(dict(enumerate(expandSummary(colorInfo))))
	replyobj.status("Restoring colors...", blankAfter=0,
		secondary=True)
	restoreColors(colors, materials)
	replyobj.status("Restoring molecules...", blankAfter=0,
		secondary=True)
	restoreMolecules(molInfo, resInfo, atomInfo, bondInfo, crdInfo)
	replyobj.status("Restoring surfaces...", blankAfter=0,
		secondary=True)
	restoreSurfaces(surfInfo)
	replyobj.status("Restoring VRML models...", blankAfter=0,
		secondary=True)
	restoreVRML(vrmlInfo)
	replyobj.status("Restoring pseudobond groups...", blankAfter=0,
		secondary=True)
	restorePseudoBondGroups(pbInfo)
	replyobj.status("Restoring model associations...", blankAfter=0,
		secondary=True)
	restoreModelAssociations(modelAssociations)
	replyobj.status("Restoring camera...", blankAfter=0,
		secondary=True)
	restoreViewer(viewerInfo)

try:
	restoreCoreModels()
except:
	reportRestoreError("Error restoring core models")

	replyobj.status("Restoring extension info...", blankAfter=0,
		secondary=True)


try:
	import StructMeasure
	from StructMeasure.DistMonitor import restoreDistances
	registerAfterModelsCB(restoreDistances, 1)
except:
	reportRestoreError("Error restoring distances in session")


def restoreMidasBase():
	formattedPositions = {}
	import Midas
	Midas.restoreMidasBase(formattedPositions)
try:
	restoreMidasBase()
except:
	reportRestoreError('Error restoring Midas base state')


def restoreMidasText():
	from Midas import midas_text
	midas_text.aliases = {}
	midas_text.userSurfCategories = {}

try:
	restoreMidasText()
except:
	reportRestoreError('Error restoring Midas text state')


def restore_cap_attributes():
 cap_attributes = \
  {
   'cap_attributes': [ ],
   'cap_color': None,
   'cap_offset': 0.01,
   'class': 'Caps_State',
   'default_cap_offset': 0.01,
   'mesh_style': False,
   'shown': True,
   'subdivision_factor': 1.0,
   'version': 1,
  }
 import SurfaceCap.session
 SurfaceCap.session.restore_cap_attributes(cap_attributes)
registerAfterModelsCB(restore_cap_attributes)


def restore_volume_data():
 volume_data_state = \
  {
   'class': 'Volume_Manager_State',
   'data_and_regions_state': [ ],
   'version': 2,
  }
 from VolumeViewer import session
 session.restore_volume_data_state(volume_data_state)

try:
  restore_volume_data()
except:
  reportRestoreError('Error restoring volume data')

geomData = {'AxisManager': {}, 'CentroidManager': {}, 'PlaneManager': {}}

try:
	from StructMeasure.Geometry import geomManager
	geomManager._restoreSession(geomData)
except:
	reportRestoreError("Error restoring geometry objects in session")


def restoreSession_RibbonStyleEditor():
	import SimpleSession
	import RibbonStyleEditor
	userScalings = []
	userXSections = []
	userResidueClasses = []
	residueData = [(4, 'Chimera default', 'rounded', u'unknown'), (5, 'Chimera default', 'rounded', u'unknown'), (6, 'Chimera default', 'rounded', u'unknown'), (7, 'Chimera default', 'rounded', u'unknown')]
	flags = RibbonStyleEditor.NucleicDefault1
	SimpleSession.registerAfterModelsCB(RibbonStyleEditor.restoreState,
				(userScalings, userXSections,
				userResidueClasses, residueData, flags))
try:
	restoreSession_RibbonStyleEditor()
except:
	reportRestoreError("Error restoring RibbonStyleEditor state")

trPickle = 'gAJjQW5pbWF0ZS5UcmFuc2l0aW9ucwpUcmFuc2l0aW9ucwpxASmBcQJ9cQMoVQxjdXN0b21fc2NlbmVxBGNBbmltYXRlLlRyYW5zaXRpb24KVHJhbnNpdGlvbgpxBSmBcQZ9cQcoVQZmcmFtZXNxCEsBVQ1kaXNjcmV0ZUZyYW1lcQlLAVUKcHJvcGVydGllc3EKXXELVQNhbGxxDGFVBG5hbWVxDWgEVQRtb2RlcQ5VBmxpbmVhcnEPdWJVCGtleWZyYW1lcRBoBSmBcRF9cRIoaAhLFGgJSwFoCl1xE2gMYWgNaBBoDmgPdWJVBXNjZW5lcRRoBSmBcRV9cRYoaAhLAWgJSwFoCl1xF2gMYWgNaBRoDmgPdWJ1Yi4='
scPickle = 'gAJjQW5pbWF0ZS5TY2VuZXMKU2NlbmVzCnEBKYFxAn1xA1UHbWFwX2lkc3EEfXNiLg=='
kfPickle = 'gAJjQW5pbWF0ZS5LZXlmcmFtZXMKS2V5ZnJhbWVzCnEBKYFxAn1xA1UHZW50cmllc3EEXXEFc2Iu'
def restoreAnimation():
	'A method to unpickle and restore animation objects'
	# Scenes must be unpickled after restoring transitions, because each
	# scene links to a 'scene' transition. Likewise, keyframes must be 
	# unpickled after restoring scenes, because each keyframe links to a scene.
	# The unpickle process is left to the restore* functions, it's 
	# important that it doesn't happen prior to calling those functions.
	import SimpleSession
	from Animate.Session import restoreTransitions
	from Animate.Session import restoreScenes
	from Animate.Session import restoreKeyframes
	SimpleSession.registerAfterModelsCB(restoreTransitions, trPickle)
	SimpleSession.registerAfterModelsCB(restoreScenes, scPickle)
	SimpleSession.registerAfterModelsCB(restoreKeyframes, kfPickle)
try:
	restoreAnimation()
except:
	reportRestoreError('Error in Animate.Session')

def restoreLightController():
	import Lighting
	Lighting._setFromParams({'ratio': 1.25, 'brightness': 1.03, 'material': [70.0, (0.85, 0.85, 0.85), 0.0], 'back': [(0.35740674433659325, 0.6604015517481454, -0.6604015517481455), (1.0, 1.0, 1.0), 0.0], 'mode': 'two-point', 'key': [(-0.2617521263510417, 0.42735041036904775, 0.8653655014547984), (1.0, 1.0, 1.0), 1.0], 'contrast': 0.83, 'fill': [(0.1762820442772322, -0.6303418552943454, 0.7560382175059158), (1.0, 1.0, 1.0), 0.0]})
try:
	restoreLightController()
except:
	reportRestoreError("Error restoring lighting parameters")


def restore_surface_color_mapping():
 try:
  surface_color_state = \
   {
    'class': 'Surface_Colorings_State',
    'coloring_table': {},
    'geometry': None,
    'is_visible': False,
    'version': 2,
   }
  import SurfaceColor.session
  SurfaceColor.session.restore_surface_color_state(surface_color_state)
 except:
  reportRestoreError('Error restoring surface color mapping')

registerAfterModelsCB(restore_surface_color_mapping)


try:
	import Ilabel
	il = Ilabel.LabelsModel(create=False)
	if il:
		il.destroy()
	il = Ilabel.LabelsModel()
	il.restoreSession({'labelIDs': [], 'curLabel': None, 'labels': [], 'labelUID': 0})
	del Ilabel, il
except:
	reportRestoreError("Error restoring IlabelModel instance in session")


try:
	from Ilabel.Arrows import ArrowsModel
	ArrowsModel().restore({'arrows': []})
except:
	reportRestoreError("Error restoring 2D arrows in session")



try:
	from Ilabel.ColorKey import getKeyModel
	getKeyModel()._restoreSession({'label spacing': 'proportional to value', 'label justification': 'decimal point', 'font size': 60, 'label positions': 'right/bottom', 'show ticks': False, 'border width': 2, 'label offset': 0, 'color depiction': 'blended', 'label color': (0.0, 0.0, 0.0, 1.0), 'font name': 'Sans Serif', 'tick length': 10, 'border color': (1, 1, 1, 1.0), 'key position': [(0.7183010618363522, 0.5517241379310345)], 'font typeface': 0, 'tick thickness': 4, 'colors/labels': [((0.0, 0.0, 1.0, 1.0), '0.2'), ((1.0, 1.0, 1.0, 1.0), '0.45'), ((1.0, 0.0, 0.0, 1.0), '0.7')]})
except:
	reportRestoreError("Error restoring color key")



def restore2DLabelDialog(info):
	from chimera.dialogs import find
	from Ilabel.gui import IlabelDialog
	dlg = find(IlabelDialog.name)
	if dlg is not None:
		dlg.destroy()
	dlg = find(IlabelDialog.name, create=True)
	dlg._restoreSession(info)

import SimpleSession
SimpleSession.registerAfterModelsCB(restore2DLabelDialog, {'mouse func': 'normal', 'sel ranges': (), 'dialog shown': 0})



def restoreRemainder():
	from SimpleSession.versions.v65 import restoreWindowSize, \
	     restoreOpenStates, restoreSelections, restoreFontInfo, \
	     restoreOpenModelsAttrs, restoreModelClip, restoreSilhouettes

	curSelIds =  [102, 106, 169, 63, 185, 187, 231, 61, 68, 189, 41, 171, 101, 232, 121, 51, 104, 105, 103, 248, 53, 107, 108, 109, 110, 186, 112, 64, 113, 114, 115, 116, 188, 118, 55, 119, 59, 120, 224, 122, 123, 124, 125, 126, 164, 127, 128, 129, 58, 47, 62, 238, 48, 40, 239, 42, 57, 111, 223, 44, 225, 246, 46, 227, 49, 50, 166, 230, 52, 163, 66, 56, 233, 54, 235, 236, 237, 45, 60, 180, 241, 242, 165, 243, 244, 245, 226, 43, 65, 67, 170, 249, 247, 172, 173, 174, 175, 176, 177, 167, 178, 184, 179, 228, 117, 181, 182, 183, 229, 168]
	savedSels = []
	openModelsAttrs = { 'cofrMethod': 4 }
	windowSize = (3202, 2146)
	xformMap = {0: (((-0.30981632069794, -0.91458145965373, 0.25991267973466), 99.241766554584), (3.0841209023945, -2.2810909144057, -14.235668255798), True), 1: (((0.11614772356162, -0.7138498985181, 0.69059976013401), 140.20662441875), (-1.1261041836762, -12.264103012903, -36.979533173502), True), 2: (((0.3375120948539, 0.12440021199767, -0.93306493508344), 144.56392221138), (2.3477529510316, 6.5584117193509, -7.817173296757), True), 3: (((-0.80268432926199, 0.57240538375646, -0.1674811756701), 49.939685389798), (3.3356250168798, -2.3167814651988, -20.33228367394), True)}
	fontInfo = {'face': ('Sans Serif', 'Normal', 16)}
	clipPlaneInfo = {}
	silhouettes = {0: True, 1: True, 2: True, 3: True, 504: True}

	replyobj.status("Restoring window...", blankAfter=0,
		secondary=True)
	restoreWindowSize(windowSize)
	replyobj.status("Restoring open states...", blankAfter=0,
		secondary=True)
	restoreOpenStates(xformMap)
	replyobj.status("Restoring font info...", blankAfter=0,
		secondary=True)
	restoreFontInfo(fontInfo)
	replyobj.status("Restoring selections...", blankAfter=0,
		secondary=True)
	restoreSelections(curSelIds, savedSels)
	replyobj.status("Restoring openModel attributes...", blankAfter=0,
		secondary=True)
	restoreOpenModelsAttrs(openModelsAttrs)
	replyobj.status("Restoring model clipping...", blankAfter=0,
		secondary=True)
	restoreModelClip(clipPlaneInfo)
	replyobj.status("Restoring per-model silhouettes...", blankAfter=0,
		secondary=True)
	restoreSilhouettes(silhouettes)

	replyobj.status("Restoring remaining extension info...", blankAfter=0,
		secondary=True)
try:
	restoreRemainder()
except:
	reportRestoreError("Error restoring post-model state")
from SimpleSession.versions.v65 import makeAfterModelsCBs
makeAfterModelsCBs()

from SimpleSession.versions.v65 import endRestore
replyobj.status('Finishing restore...', blankAfter=0, secondary=True)
endRestore({'thumbnailSize': 128, 'description': u'the ligands are overlayed with the correct files loaded and the correct .dat files loaded for contacts to be visualized on the 3d ligand centroid of all systems\n\n'})
replyobj.status('', secondary=True)
replyobj.status('Restore finished.')

